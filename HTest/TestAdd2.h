#pragma once

/*==============================================================================
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include <random>

//******************************************************************************
//******************************************************************************
//******************************************************************************
// This class implements a general purpose shared storage object. It contains
// status counters and flags.

class TestAdd2
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Constants.

   static const int cMaxStringSize = 100;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members:

   // Output.
   char mInString[cMaxStringSize];

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members:

   // Random number generator for random timer delay.
   std::default_random_engine mRandomGen;
   std::uniform_int_distribution<> mRandomInt1;
   std::uniform_int_distribution<> mRandomInt2;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods:

   // Constructor.
   TestAdd2();
   void reset();

   // Tests.
   void doTest();
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Global instance

#ifdef _TESTADD2_CPP_
          TestAdd2 gTestAdd2;
#else
   extern TestAdd2 gTestAdd2;
#endif

//******************************************************************************
//******************************************************************************
//******************************************************************************

